name: CD

concurrency:
  group: production
  cancel-in-progress: true

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: "The tag of the Docker image to deploy"
        required: true
        type: string

  workflow_call:
    inputs:
      image_tag:
        required: true
        type: string
      debug:
        required: false
        type: string
        default: 'false'
env:
  RESOURCE_GROUP: "tsvi-rg"
  VM_NAME: "tsvi-vm"

jobs:
  staging-end2end-tests:
    permissions:
      actions: read
      id-token: write # This is required for requesting the JWT
      contents: read  # This is required for actions/checkout
    
    runs-on: ubuntu-latest
    environment: STAGE
    steps:
      - name: 'Az CLI Login via OIDC'
        uses: azure/login@v1.4.6
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy the Azure App - Including DB Migrations [STAGING ENVIRONMENT]
        run: |
          REVISION_SUFFIX=$(echo "${{ github.sha }}-staging" | tr '[:upper:]' '[:lower:]' | tr -cd '[:alnum:]-')
          echo "REVISION_SUFFIX=$REVISION_SUFFIX" >> $GITHUB_ENV
          az containerapp create \
            --name tsvi-demo-movie-staging \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --image ${{ inputs.image_tag }} \
            --environment ${{ vars.CONTAINER_APP_ENVIRONMENT }} \
            --target-port 80 \
            --ingress 'external' \
            --cpu 0.5 \
            --memory 1.0Gi \
            --revision-suffix $REVISION_SUFFIX \
            --env-vars ConnectionStrings__RazorPagesMovieContext='${{ secrets.CONNECTIONSTRINGS__RAZORPAGESMOVIECONTEXT}}'


  production:
    permissions:
      actions: read
      id-token: write # This is required for requesting the JWT
      contents: read  # This is required for actions/checkout
    
    runs-on: ubuntu-latest
    environment: 
      name: PROD
      url: http://tsvi.eastus.cloudapp.azure.com
    needs: [staging-end2end-tests]
    steps:
      - name: 'Az CLI Login via OIDC'
        uses: azure/login@v1.4.6
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy the Azure App - Including DB Migrations [PRODUCTION ENVIRONMENT]
        run: |
          echo "Deploying the Azure App - Including DB Migrations [PRODUCTION ENVIRONMENT]"